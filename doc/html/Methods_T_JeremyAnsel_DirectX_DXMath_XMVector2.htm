<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>XMVector2 Methods</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="XMVector2 class, methods" /><meta name="Microsoft.Help.Id" content="Methods.T:JeremyAnsel.DirectX.DXMath.XMVector2" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="JeremyAnsel.DirectX.DXMath" /><meta name="file" content="Methods_T_JeremyAnsel_DirectX_DXMath_XMVector2" /><meta name="guid" content="Methods_T_JeremyAnsel_DirectX_DXMath_XMVector2" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">JeremyAnsel.DirectX Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Welcome.htm" title="JeremyAnsel.DirectX Documentation" tocid="roottoc">JeremyAnsel.DirectX Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_JeremyAnsel_DirectX_DXMath.htm" title="JeremyAnsel.DirectX.DXMath" tocid="N_JeremyAnsel_DirectX_DXMath">JeremyAnsel.DirectX.DXMath</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_JeremyAnsel_DirectX_DXMath_XMVector2.htm" title="XMVector2 Class" tocid="T_JeremyAnsel_DirectX_DXMath_XMVector2">XMVector2 Class</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_JeremyAnsel_DirectX_DXMath_XMVector2.htm" title="XMVector2 Methods" tocid="Methods_T_JeremyAnsel_DirectX_DXMath_XMVector2">XMVector2 Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_AngleBetweenNormals.htm" title="AngleBetweenNormals Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_AngleBetweenNormals">AngleBetweenNormals Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_AngleBetweenNormalsEst.htm" title="AngleBetweenNormalsEst Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_AngleBetweenNormalsEst">AngleBetweenNormalsEst Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_AngleBetweenVectors.htm" title="AngleBetweenVectors Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_AngleBetweenVectors">AngleBetweenVectors Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_ClampLength.htm" title="ClampLength Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_ClampLength">ClampLength Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_ClampLengthV.htm" title="ClampLengthV Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_ClampLengthV">ClampLengthV Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Cross.htm" title="Cross Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_Cross">Cross Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Dot.htm" title="Dot Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_Dot">Dot Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Equal.htm" title="Equal Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_Equal">Equal Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_EqualInt.htm" title="EqualInt Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_EqualInt">EqualInt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_EqualIntR.htm" title="EqualIntR Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_EqualIntR">EqualIntR Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_EqualR.htm" title="EqualR Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_EqualR">EqualR Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Greater.htm" title="Greater Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_Greater">Greater Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_GreaterOrEqual.htm" title="GreaterOrEqual Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_GreaterOrEqual">GreaterOrEqual Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_GreaterOrEqualR.htm" title="GreaterOrEqualR Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_GreaterOrEqualR">GreaterOrEqualR Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_GreaterR.htm" title="GreaterR Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_GreaterR">GreaterR Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_InBounds.htm" title="InBounds Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_InBounds">InBounds Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_IntersectLine.htm" title="IntersectLine Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_IntersectLine">IntersectLine Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_IsInfinite.htm" title="IsInfinite Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_IsInfinite">IsInfinite Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_IsNaN.htm" title="IsNaN Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_IsNaN">IsNaN Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Length.htm" title="Length Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_Length">Length Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_LengthEst.htm" title="LengthEst Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_LengthEst">LengthEst Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_LengthSquare.htm" title="LengthSquare Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_LengthSquare">LengthSquare Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Less.htm" title="Less Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_Less">Less Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_LessOrEqual.htm" title="LessOrEqual Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_LessOrEqual">LessOrEqual Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_LinePointDistance.htm" title="LinePointDistance Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_LinePointDistance">LinePointDistance Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_NearEqual.htm" title="NearEqual Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_NearEqual">NearEqual Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Normalize.htm" title="Normalize Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_Normalize">Normalize Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_NormalizeEst.htm" title="NormalizeEst Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_NormalizeEst">NormalizeEst Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_NotEqual.htm" title="NotEqual Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_NotEqual">NotEqual Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_NotEqualInt.htm" title="NotEqualInt Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_NotEqualInt">NotEqualInt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Orthogonal.htm" title="Orthogonal Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_Orthogonal">Orthogonal Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_ReciprocalLength.htm" title="ReciprocalLength Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_ReciprocalLength">ReciprocalLength Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_ReciprocalLengthEst.htm" title="ReciprocalLengthEst Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_ReciprocalLengthEst">ReciprocalLengthEst Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Reflect.htm" title="Reflect Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_Reflect">Reflect Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Refract.htm" title="Refract Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_Refract">Refract Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_RefractV.htm" title="RefractV Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_RefractV">RefractV Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Transform.htm" title="Transform Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_Transform">Transform Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_TransformCoord.htm" title="TransformCoord Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_TransformCoord">TransformCoord Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMVector2_TransformNormal.htm" title="TransformNormal Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMVector2_TransformNormal">TransformNormal Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn">XMVector2 Methods</td></tr></table><span class="introStyle"></span><p>The <a href="T_JeremyAnsel_DirectX_DXMath_XMVector2.htm">XMVector2</a> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID0RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_AngleBetweenNormals.htm">AngleBetweenNormals</a></td><td><div class="summary">
            Computes the radian angle between two normalized 2D vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_AngleBetweenNormalsEst.htm">AngleBetweenNormalsEst</a></td><td><div class="summary">
            Estimates the radian angle between two normalized 2D vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_AngleBetweenVectors.htm">AngleBetweenVectors</a></td><td><div class="summary">
            Computes the radian angle between two 2D vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_ClampLength.htm">ClampLength</a></td><td><div class="summary">
            Clamps the length of a 2D vector to a given range.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_ClampLengthV.htm">ClampLengthV</a></td><td><div class="summary">
            Clamps the length of a 2D vector to a given range.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Cross.htm">Cross</a></td><td><div class="summary">
            Computes the 2D cross product.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Dot.htm">Dot</a></td><td><div class="summary">
            Computes the dot product between 2D vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Equal.htm">Equal</a></td><td><div class="summary">
            Tests whether two 2D vectors are equal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_EqualInt.htm">EqualInt</a></td><td><div class="summary">
            Tests whether two 2D vectors are equal, treating each component as an unsigned integer.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_EqualIntR.htm">EqualIntR</a></td><td><div class="summary">
            Tests whether two 2D vectors are equal, treating each component as an unsigned integer. In addition, this function returns a comparison.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_EqualR.htm">EqualR</a></td><td><div class="summary">
            Tests whether two 2D vectors are equal. In addition, this function returns a comparison value.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Greater.htm">Greater</a></td><td><div class="summary">
            Tests whether one 2D vector is greater than another 2D vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_GreaterOrEqual.htm">GreaterOrEqual</a></td><td><div class="summary">
            Tests whether one 2D vector is greater-than-or-equal-to another 2D vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_GreaterOrEqualR.htm">GreaterOrEqualR</a></td><td><div class="summary">
            Tests whether one 2D vector is greater-than-or-equal-to another 2D vector and returns a comparison value.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_GreaterR.htm">GreaterR</a></td><td><div class="summary">
            Tests whether one 2D vector is greater than another 2D vector and returns a comparison value.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_InBounds.htm">InBounds</a></td><td><div class="summary">
            Tests whether the components of a 2D vector are within set bounds.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_IntersectLine.htm">IntersectLine</a></td><td><div class="summary">
            Finds the intersection of two lines.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_IsInfinite.htm">IsInfinite</a></td><td><div class="summary">
            Tests whether any component of a 2D vector is positive or negative infinity.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_IsNaN.htm">IsNaN</a></td><td><div class="summary">
            Tests whether any component of a 2D vector is a NaN.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Length.htm">Length</a></td><td><div class="summary">
            Computes the length of a 2D vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_LengthEst.htm">LengthEst</a></td><td><div class="summary">
            Estimates the length of a 2D vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_LengthSquare.htm">LengthSquare</a></td><td><div class="summary">
            Computes the square of the length of a 2D vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Less.htm">Less</a></td><td><div class="summary">
            Tests whether one 2D vector is less than another 2D vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_LessOrEqual.htm">LessOrEqual</a></td><td><div class="summary">
            Tests whether one 2D vector is less-than-or-equal-to another 2D vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_LinePointDistance.htm">LinePointDistance</a></td><td><div class="summary">
            Computes the minimum distance between a line and a point.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_NearEqual.htm">NearEqual</a></td><td><div class="summary">
            Tests whether one 2D vector is near another 2D vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Normalize.htm">Normalize</a></td><td><div class="summary">
            Returns the normalized version of a 2D vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_NormalizeEst.htm">NormalizeEst</a></td><td><div class="summary">
            Estimates the normalized version of a 2D vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_NotEqual.htm">NotEqual</a></td><td><div class="summary">
            Tests whether two 2D vectors are not equal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_NotEqualInt.htm">NotEqualInt</a></td><td><div class="summary">
            Test whether two vectors are not equal, treating each component as an unsigned integer.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Orthogonal.htm">Orthogonal</a></td><td><div class="summary">
            Computes a vector perpendicular to a 2D vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_ReciprocalLength.htm">ReciprocalLength</a></td><td><div class="summary">
            Computes the reciprocal of the length of a 2D vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_ReciprocalLengthEst.htm">ReciprocalLengthEst</a></td><td><div class="summary">
            Estimates the reciprocal of the length of a 2D vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Reflect.htm">Reflect</a></td><td><div class="summary">
            Reflects an incident 2D vector across a 2D normal vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Refract.htm">Refract</a></td><td><div class="summary">
            Refracts an incident 2D vector across a 2D normal vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_RefractV.htm">RefractV</a></td><td><div class="summary">
            Refracts an incident 2D vector across a 2D normal vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_Transform.htm">Transform</a></td><td><div class="summary">
            Transforms a 2D vector by a matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_TransformCoord.htm">TransformCoord</a></td><td><div class="summary">
            Transforms a 2D vector by a given matrix, projecting the result back into w = 1.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMVector2_TransformNormal.htm">TransformNormal</a></td><td><div class="summary">
            Transforms the 2D vector normal by the given matrix.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID1RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_JeremyAnsel_DirectX_DXMath_XMVector2.htm">XMVector2 Class</a></div><div class="seeAlsoStyle"><a href="N_JeremyAnsel_DirectX_DXMath.htm">JeremyAnsel.DirectX.DXMath Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="https://github.com/JeremyAnsel/JeremyAnsel.DirectX" target="_blank">Copyright © 2014-2016 Jérémy Ansel</a></p> </div></body></html>