<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>XMQuaternion Methods</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="XMQuaternion class, methods" /><meta name="Microsoft.Help.Id" content="Methods.T:JeremyAnsel.DirectX.DXMath.XMQuaternion" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="JeremyAnsel.DirectX.DXMath" /><meta name="file" content="Methods_T_JeremyAnsel_DirectX_DXMath_XMQuaternion" /><meta name="guid" content="Methods_T_JeremyAnsel_DirectX_DXMath_XMQuaternion" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">JeremyAnsel.DirectX Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Welcome.htm" title="JeremyAnsel.DirectX Documentation" tocid="roottoc">JeremyAnsel.DirectX Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_JeremyAnsel_DirectX_DXMath.htm" title="JeremyAnsel.DirectX.DXMath" tocid="N_JeremyAnsel_DirectX_DXMath">JeremyAnsel.DirectX.DXMath</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_JeremyAnsel_DirectX_DXMath_XMQuaternion.htm" title="XMQuaternion Class" tocid="T_JeremyAnsel_DirectX_DXMath_XMQuaternion">XMQuaternion Class</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_JeremyAnsel_DirectX_DXMath_XMQuaternion.htm" title="XMQuaternion Methods" tocid="Methods_T_JeremyAnsel_DirectX_DXMath_XMQuaternion">XMQuaternion Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_BaryCentric.htm" title="BaryCentric Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_BaryCentric">BaryCentric Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_BaryCentricV.htm" title="BaryCentricV Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_BaryCentricV">BaryCentricV Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Conjugate.htm" title="Conjugate Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Conjugate">Conjugate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Dot.htm" title="Dot Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Dot">Dot Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Equal.htm" title="Equal Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Equal">Equal Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Exp.htm" title="Exp Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Exp">Exp Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Inverse.htm" title="Inverse Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Inverse">Inverse Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_IsIdentity.htm" title="IsIdentity Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_IsIdentity">IsIdentity Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_IsInfinite.htm" title="IsInfinite Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_IsInfinite">IsInfinite Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_IsNaN.htm" title="IsNaN Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_IsNaN">IsNaN Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Length.htm" title="Length Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Length">Length Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_LengthSquare.htm" title="LengthSquare Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_LengthSquare">LengthSquare Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Ln.htm" title="Ln Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Ln">Ln Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Multiply.htm" title="Multiply Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Multiply">Multiply Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Normalize.htm" title="Normalize Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Normalize">Normalize Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_NormalizeEst.htm" title="NormalizeEst Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_NormalizeEst">NormalizeEst Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_NotEqual.htm" title="NotEqual Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_NotEqual">NotEqual Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_ReciprocalLength.htm" title="ReciprocalLength Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_ReciprocalLength">ReciprocalLength Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_RotationAxis.htm" title="RotationAxis Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_RotationAxis">RotationAxis Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_RotationMatrix.htm" title="RotationMatrix Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_RotationMatrix">RotationMatrix Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_RotationNormal.htm" title="RotationNormal Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_RotationNormal">RotationNormal Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_RotationRollPitchYaw.htm" title="RotationRollPitchYaw Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_RotationRollPitchYaw">RotationRollPitchYaw Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_RotationRollPitchYawFromVector.htm" title="RotationRollPitchYawFromVector Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_RotationRollPitchYawFromVector">RotationRollPitchYawFromVector Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Slerp.htm" title="Slerp Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Slerp">Slerp Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_SlerpV.htm" title="SlerpV Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_SlerpV">SlerpV Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Squad.htm" title="Squad Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Squad">Squad Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_SquadSetup.htm" title="SquadSetup Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_SquadSetup">SquadSetup Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_SquadV.htm" title="SquadV Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_SquadV">SquadV Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_ToAxisAngle.htm" title="ToAxisAngle Method " tocid="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_ToAxisAngle">ToAxisAngle Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn">XMQuaternion Methods</td></tr></table><span class="introStyle"></span><p>The <a href="T_JeremyAnsel_DirectX_DXMath_XMQuaternion.htm">XMQuaternion</a> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID0RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_BaryCentric.htm">BaryCentric</a></td><td><div class="summary">
            Returns a point in barycentric coordinates, using the specified quaternions.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_BaryCentricV.htm">BaryCentricV</a></td><td><div class="summary">
            Returns a point in barycentric coordinates, using the specified quaternions.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Conjugate.htm">Conjugate</a></td><td><div class="summary">
            Computes the conjugate of a quaternion.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Dot.htm">Dot</a></td><td><div class="summary">
            Computes the dot product of two quaternions.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Equal.htm">Equal</a></td><td><div class="summary">
            Tests whether two quaternions are equal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Exp.htm">Exp</a></td><td><div class="summary">
            Computes the exponential of a given pure quaternion.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Inverse.htm">Inverse</a></td><td><div class="summary">
            Computes the inverse of a quaternion.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_IsIdentity.htm">IsIdentity</a></td><td><div class="summary">
            Tests whether a specific quaternion is the identity quaternion.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_IsInfinite.htm">IsInfinite</a></td><td><div class="summary">
            Test whether any component of a quaternion is either positive or negative infinity.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_IsNaN.htm">IsNaN</a></td><td><div class="summary">
            Test whether any component of a quaternion is a NaN.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Length.htm">Length</a></td><td><div class="summary">
            Computes the magnitude of a quaternion.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_LengthSquare.htm">LengthSquare</a></td><td><div class="summary">
            Computes the square of the magnitude of a quaternion.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Ln.htm">Ln</a></td><td><div class="summary">
            Computes the natural logarithm of a given unit quaternion.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Multiply.htm">Multiply</a></td><td><div class="summary">
            Computes the product of two quaternions.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Normalize.htm">Normalize</a></td><td><div class="summary">
            Normalizes a quaternion.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_NormalizeEst.htm">NormalizeEst</a></td><td><div class="summary">
            Estimates the normalized version of a quaternion.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_NotEqual.htm">NotEqual</a></td><td><div class="summary">
            Tests whether two quaternions are not equal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_ReciprocalLength.htm">ReciprocalLength</a></td><td><div class="summary">
            Computes the reciprocal of the magnitude of a quaternion.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_RotationAxis.htm">RotationAxis</a></td><td><div class="summary">
            Computes a rotation quaternion about an axis.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_RotationMatrix.htm">RotationMatrix</a></td><td><div class="summary">
            Computes a rotation quaternion from a rotation matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_RotationNormal.htm">RotationNormal</a></td><td><div class="summary">
            Computes the rotation quaternion about a normal vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_RotationRollPitchYaw.htm">RotationRollPitchYaw</a></td><td><div class="summary">
            Computes a rotation quaternion based on the pitch, yaw, and roll (Euler angles).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_RotationRollPitchYawFromVector.htm">RotationRollPitchYawFromVector</a></td><td><div class="summary">
            Computes a rotation quaternion based on a vector containing the Euler angles (pitch, yaw, and roll).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Slerp.htm">Slerp</a></td><td><div class="summary">
            Interpolates between two unit quaternions, using spherical linear interpolation.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_SlerpV.htm">SlerpV</a></td><td><div class="summary">
            Interpolates between two unit quaternions, using spherical linear interpolation.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_Squad.htm">Squad</a></td><td><div class="summary">
            Interpolates between four unit quaternions, using spherical quadrangle interpolation.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_SquadSetup.htm">SquadSetup</a></td><td><div class="summary">
            Provides addresses of setup control points for spherical quadrangle interpolation.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_SquadV.htm">SquadV</a></td><td><div class="summary">
            Interpolates between four unit quaternions, using spherical quadrangle interpolation.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_JeremyAnsel_DirectX_DXMath_XMQuaternion_ToAxisAngle.htm">ToAxisAngle</a></td><td><div class="summary">
            Computes an axis and angle of rotation about that axis for a given quaternion.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID1RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_JeremyAnsel_DirectX_DXMath_XMQuaternion.htm">XMQuaternion Class</a></div><div class="seeAlsoStyle"><a href="N_JeremyAnsel_DirectX_DXMath.htm">JeremyAnsel.DirectX.DXMath Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="https://github.com/JeremyAnsel/JeremyAnsel.DirectX" target="_blank">Copyright © 2014-2016 Jérémy Ansel</a></p> </div></body></html>